/// <reference types="node" />
import { EventEmitter } from 'events';
import { ConnectConfig } from 'ssh2';
declare type ForwardOutConfig = {
    srcAddr: string;
    srcPort: number;
    dstAddr: string;
    dstPort: number;
};
declare type LocalProxyServerConfig = {
    localAddr: string;
    localPort: number;
};
export declare type SshTunnelConfig = ConnectConfig & ForwardOutConfig & LocalProxyServerConfig;
declare class SshTunnel extends EventEmitter {
    private connections;
    private server;
    private rawConfig;
    private sshClient;
    private serverListen;
    private serverClose;
    private forwardOut;
    constructor(config?: Partial<SshTunnelConfig>);
    get config(): SshTunnelConfig;
    listen(): Promise<void>;
    close(): Promise<void>;
    private closeSshClient;
    private closeOpenConnections;
}
export default SshTunnel;
